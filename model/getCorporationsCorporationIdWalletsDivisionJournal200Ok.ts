/**
 * EVE Swagger Interface
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.8.6
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


/**
 * 200 ok object
 */
export interface GetCorporationsCorporationIdWalletsDivisionJournal200Ok { 
    /**
     * The amount of ISK given or taken from the wallet as a result of the given transaction. Positive when ISK is deposited into the wallet and negative when ISK is withdrawn
     */
    amount?: number;
    /**
     * Wallet balance after transaction occurred
     */
    balance?: number;
    /**
     * An ID that gives extra context to the particular transaction. Because of legacy reasons the context is completely different per ref_type and means different things. It is also possible to not have a context_id
     */
    context_id?: number;
    /**
     * The type of the given context_id if present
     */
    context_id_type?: GetCorporationsCorporationIdWalletsDivisionJournal200Ok.ContextIdTypeEnum;
    /**
     * Date and time of transaction
     */
    date: Date;
    /**
     * The reason for the transaction, mirrors what is seen in the client
     */
    description: string;
    /**
     * The id of the first party involved in the transaction. This attribute has no consistency and is different or non existant for particular ref_types. The description attribute will help make sense of what this attribute means. For more info about the given ID it can be dropped into the /universe/names/ ESI route to determine its type and name
     */
    first_party_id?: number;
    /**
     * Unique journal reference ID
     */
    id: number;
    /**
     * The user stated reason for the transaction. Only applies to some ref_types
     */
    reason?: string;
    /**
     * \"The transaction type for the given. transaction. Different transaction types will populate different attributes. Note: If you have an existing XML API application that is using ref_types, you will need to know which string ESI ref_type maps to which integer. You can look at the following file to see string->int mappings: https://github.com/ccpgames/eve-glue/blob/master/eve_glue/wallet_journal_ref.py\"
     */
    ref_type: GetCorporationsCorporationIdWalletsDivisionJournal200Ok.RefTypeEnum;
    /**
     * The id of the second party involved in the transaction. This attribute has no consistency and is different or non existant for particular ref_types. The description attribute will help make sense of what this attribute means. For more info about the given ID it can be dropped into the /universe/names/ ESI route to determine its type and name
     */
    second_party_id?: number;
    /**
     * Tax amount received. Only applies to tax related transactions
     */
    tax?: number;
    /**
     * The corporation ID receiving any tax paid. Only applies to tax related transactions
     */
    tax_receiver_id?: number;
}
export namespace GetCorporationsCorporationIdWalletsDivisionJournal200Ok {
    export type ContextIdTypeEnum = 'structure_id' | 'station_id' | 'market_transaction_id' | 'character_id' | 'corporation_id' | 'alliance_id' | 'eve_system' | 'industry_job_id' | 'contract_id' | 'planet_id' | 'system_id' | 'type_id';
    export const ContextIdTypeEnum = {
        StructureId: 'structure_id' as ContextIdTypeEnum,
        StationId: 'station_id' as ContextIdTypeEnum,
        MarketTransactionId: 'market_transaction_id' as ContextIdTypeEnum,
        CharacterId: 'character_id' as ContextIdTypeEnum,
        CorporationId: 'corporation_id' as ContextIdTypeEnum,
        AllianceId: 'alliance_id' as ContextIdTypeEnum,
        EveSystem: 'eve_system' as ContextIdTypeEnum,
        IndustryJobId: 'industry_job_id' as ContextIdTypeEnum,
        ContractId: 'contract_id' as ContextIdTypeEnum,
        PlanetId: 'planet_id' as ContextIdTypeEnum,
        SystemId: 'system_id' as ContextIdTypeEnum,
        TypeId: 'type_id' as ContextIdTypeEnum
    };
    export type RefTypeEnum = 'acceleration_gate_fee' | 'advertisement_listing_fee' | 'agent_donation' | 'agent_location_services' | 'agent_miscellaneous' | 'agent_mission_collateral_paid' | 'agent_mission_collateral_refunded' | 'agent_mission_reward' | 'agent_mission_reward_corporation_tax' | 'agent_mission_time_bonus_reward' | 'agent_mission_time_bonus_reward_corporation_tax' | 'agent_security_services' | 'agent_services_rendered' | 'agents_preward' | 'alliance_maintainance_fee' | 'alliance_registration_fee' | 'asset_safety_recovery_tax' | 'bounty' | 'bounty_prize' | 'bounty_prize_corporation_tax' | 'bounty_prizes' | 'bounty_reimbursement' | 'bounty_surcharge' | 'brokers_fee' | 'clone_activation' | 'clone_transfer' | 'contraband_fine' | 'contract_auction_bid' | 'contract_auction_bid_corp' | 'contract_auction_bid_refund' | 'contract_auction_sold' | 'contract_brokers_fee' | 'contract_brokers_fee_corp' | 'contract_collateral' | 'contract_collateral_deposited_corp' | 'contract_collateral_payout' | 'contract_collateral_refund' | 'contract_deposit' | 'contract_deposit_corp' | 'contract_deposit_refund' | 'contract_deposit_sales_tax' | 'contract_price' | 'contract_price_payment_corp' | 'contract_reversal' | 'contract_reward' | 'contract_reward_deposited' | 'contract_reward_deposited_corp' | 'contract_reward_refund' | 'contract_sales_tax' | 'copying' | 'corporate_reward_payout' | 'corporate_reward_tax' | 'corporation_account_withdrawal' | 'corporation_bulk_payment' | 'corporation_dividend_payment' | 'corporation_liquidation' | 'corporation_logo_change_cost' | 'corporation_payment' | 'corporation_registration_fee' | 'courier_mission_escrow' | 'cspa' | 'cspaofflinerefund' | 'datacore_fee' | 'dna_modification_fee' | 'docking_fee' | 'duel_wager_escrow' | 'duel_wager_payment' | 'duel_wager_refund' | 'factory_slot_rental_fee' | 'gm_cash_transfer' | 'industry_job_tax' | 'infrastructure_hub_maintenance' | 'inheritance' | 'insurance' | 'jump_clone_activation_fee' | 'jump_clone_installation_fee' | 'kill_right_fee' | 'lp_store' | 'manufacturing' | 'market_escrow' | 'market_fine_paid' | 'market_transaction' | 'medal_creation' | 'medal_issued' | 'mission_completion' | 'mission_cost' | 'mission_expiration' | 'mission_reward' | 'office_rental_fee' | 'operation_bonus' | 'opportunity_reward' | 'planetary_construction' | 'planetary_export_tax' | 'planetary_import_tax' | 'player_donation' | 'player_trading' | 'project_discovery_reward' | 'project_discovery_tax' | 'reaction' | 'release_of_impounded_property' | 'repair_bill' | 'reprocessing_tax' | 'researching_material_productivity' | 'researching_technology' | 'researching_time_productivity' | 'resource_wars_reward' | 'reverse_engineering' | 'security_processing_fee' | 'shares' | 'sovereignity_bill' | 'store_purchase' | 'store_purchase_refund' | 'transaction_tax' | 'upkeep_adjustment_fee' | 'war_ally_contract' | 'war_fee' | 'war_fee_surrender';
    export const RefTypeEnum = {
        AccelerationGateFee: 'acceleration_gate_fee' as RefTypeEnum,
        AdvertisementListingFee: 'advertisement_listing_fee' as RefTypeEnum,
        AgentDonation: 'agent_donation' as RefTypeEnum,
        AgentLocationServices: 'agent_location_services' as RefTypeEnum,
        AgentMiscellaneous: 'agent_miscellaneous' as RefTypeEnum,
        AgentMissionCollateralPaid: 'agent_mission_collateral_paid' as RefTypeEnum,
        AgentMissionCollateralRefunded: 'agent_mission_collateral_refunded' as RefTypeEnum,
        AgentMissionReward: 'agent_mission_reward' as RefTypeEnum,
        AgentMissionRewardCorporationTax: 'agent_mission_reward_corporation_tax' as RefTypeEnum,
        AgentMissionTimeBonusReward: 'agent_mission_time_bonus_reward' as RefTypeEnum,
        AgentMissionTimeBonusRewardCorporationTax: 'agent_mission_time_bonus_reward_corporation_tax' as RefTypeEnum,
        AgentSecurityServices: 'agent_security_services' as RefTypeEnum,
        AgentServicesRendered: 'agent_services_rendered' as RefTypeEnum,
        AgentsPreward: 'agents_preward' as RefTypeEnum,
        AllianceMaintainanceFee: 'alliance_maintainance_fee' as RefTypeEnum,
        AllianceRegistrationFee: 'alliance_registration_fee' as RefTypeEnum,
        AssetSafetyRecoveryTax: 'asset_safety_recovery_tax' as RefTypeEnum,
        Bounty: 'bounty' as RefTypeEnum,
        BountyPrize: 'bounty_prize' as RefTypeEnum,
        BountyPrizeCorporationTax: 'bounty_prize_corporation_tax' as RefTypeEnum,
        BountyPrizes: 'bounty_prizes' as RefTypeEnum,
        BountyReimbursement: 'bounty_reimbursement' as RefTypeEnum,
        BountySurcharge: 'bounty_surcharge' as RefTypeEnum,
        BrokersFee: 'brokers_fee' as RefTypeEnum,
        CloneActivation: 'clone_activation' as RefTypeEnum,
        CloneTransfer: 'clone_transfer' as RefTypeEnum,
        ContrabandFine: 'contraband_fine' as RefTypeEnum,
        ContractAuctionBid: 'contract_auction_bid' as RefTypeEnum,
        ContractAuctionBidCorp: 'contract_auction_bid_corp' as RefTypeEnum,
        ContractAuctionBidRefund: 'contract_auction_bid_refund' as RefTypeEnum,
        ContractAuctionSold: 'contract_auction_sold' as RefTypeEnum,
        ContractBrokersFee: 'contract_brokers_fee' as RefTypeEnum,
        ContractBrokersFeeCorp: 'contract_brokers_fee_corp' as RefTypeEnum,
        ContractCollateral: 'contract_collateral' as RefTypeEnum,
        ContractCollateralDepositedCorp: 'contract_collateral_deposited_corp' as RefTypeEnum,
        ContractCollateralPayout: 'contract_collateral_payout' as RefTypeEnum,
        ContractCollateralRefund: 'contract_collateral_refund' as RefTypeEnum,
        ContractDeposit: 'contract_deposit' as RefTypeEnum,
        ContractDepositCorp: 'contract_deposit_corp' as RefTypeEnum,
        ContractDepositRefund: 'contract_deposit_refund' as RefTypeEnum,
        ContractDepositSalesTax: 'contract_deposit_sales_tax' as RefTypeEnum,
        ContractPrice: 'contract_price' as RefTypeEnum,
        ContractPricePaymentCorp: 'contract_price_payment_corp' as RefTypeEnum,
        ContractReversal: 'contract_reversal' as RefTypeEnum,
        ContractReward: 'contract_reward' as RefTypeEnum,
        ContractRewardDeposited: 'contract_reward_deposited' as RefTypeEnum,
        ContractRewardDepositedCorp: 'contract_reward_deposited_corp' as RefTypeEnum,
        ContractRewardRefund: 'contract_reward_refund' as RefTypeEnum,
        ContractSalesTax: 'contract_sales_tax' as RefTypeEnum,
        Copying: 'copying' as RefTypeEnum,
        CorporateRewardPayout: 'corporate_reward_payout' as RefTypeEnum,
        CorporateRewardTax: 'corporate_reward_tax' as RefTypeEnum,
        CorporationAccountWithdrawal: 'corporation_account_withdrawal' as RefTypeEnum,
        CorporationBulkPayment: 'corporation_bulk_payment' as RefTypeEnum,
        CorporationDividendPayment: 'corporation_dividend_payment' as RefTypeEnum,
        CorporationLiquidation: 'corporation_liquidation' as RefTypeEnum,
        CorporationLogoChangeCost: 'corporation_logo_change_cost' as RefTypeEnum,
        CorporationPayment: 'corporation_payment' as RefTypeEnum,
        CorporationRegistrationFee: 'corporation_registration_fee' as RefTypeEnum,
        CourierMissionEscrow: 'courier_mission_escrow' as RefTypeEnum,
        Cspa: 'cspa' as RefTypeEnum,
        Cspaofflinerefund: 'cspaofflinerefund' as RefTypeEnum,
        DatacoreFee: 'datacore_fee' as RefTypeEnum,
        DnaModificationFee: 'dna_modification_fee' as RefTypeEnum,
        DockingFee: 'docking_fee' as RefTypeEnum,
        DuelWagerEscrow: 'duel_wager_escrow' as RefTypeEnum,
        DuelWagerPayment: 'duel_wager_payment' as RefTypeEnum,
        DuelWagerRefund: 'duel_wager_refund' as RefTypeEnum,
        FactorySlotRentalFee: 'factory_slot_rental_fee' as RefTypeEnum,
        GmCashTransfer: 'gm_cash_transfer' as RefTypeEnum,
        IndustryJobTax: 'industry_job_tax' as RefTypeEnum,
        InfrastructureHubMaintenance: 'infrastructure_hub_maintenance' as RefTypeEnum,
        Inheritance: 'inheritance' as RefTypeEnum,
        Insurance: 'insurance' as RefTypeEnum,
        JumpCloneActivationFee: 'jump_clone_activation_fee' as RefTypeEnum,
        JumpCloneInstallationFee: 'jump_clone_installation_fee' as RefTypeEnum,
        KillRightFee: 'kill_right_fee' as RefTypeEnum,
        LpStore: 'lp_store' as RefTypeEnum,
        Manufacturing: 'manufacturing' as RefTypeEnum,
        MarketEscrow: 'market_escrow' as RefTypeEnum,
        MarketFinePaid: 'market_fine_paid' as RefTypeEnum,
        MarketTransaction: 'market_transaction' as RefTypeEnum,
        MedalCreation: 'medal_creation' as RefTypeEnum,
        MedalIssued: 'medal_issued' as RefTypeEnum,
        MissionCompletion: 'mission_completion' as RefTypeEnum,
        MissionCost: 'mission_cost' as RefTypeEnum,
        MissionExpiration: 'mission_expiration' as RefTypeEnum,
        MissionReward: 'mission_reward' as RefTypeEnum,
        OfficeRentalFee: 'office_rental_fee' as RefTypeEnum,
        OperationBonus: 'operation_bonus' as RefTypeEnum,
        OpportunityReward: 'opportunity_reward' as RefTypeEnum,
        PlanetaryConstruction: 'planetary_construction' as RefTypeEnum,
        PlanetaryExportTax: 'planetary_export_tax' as RefTypeEnum,
        PlanetaryImportTax: 'planetary_import_tax' as RefTypeEnum,
        PlayerDonation: 'player_donation' as RefTypeEnum,
        PlayerTrading: 'player_trading' as RefTypeEnum,
        ProjectDiscoveryReward: 'project_discovery_reward' as RefTypeEnum,
        ProjectDiscoveryTax: 'project_discovery_tax' as RefTypeEnum,
        Reaction: 'reaction' as RefTypeEnum,
        ReleaseOfImpoundedProperty: 'release_of_impounded_property' as RefTypeEnum,
        RepairBill: 'repair_bill' as RefTypeEnum,
        ReprocessingTax: 'reprocessing_tax' as RefTypeEnum,
        ResearchingMaterialProductivity: 'researching_material_productivity' as RefTypeEnum,
        ResearchingTechnology: 'researching_technology' as RefTypeEnum,
        ResearchingTimeProductivity: 'researching_time_productivity' as RefTypeEnum,
        ResourceWarsReward: 'resource_wars_reward' as RefTypeEnum,
        ReverseEngineering: 'reverse_engineering' as RefTypeEnum,
        SecurityProcessingFee: 'security_processing_fee' as RefTypeEnum,
        Shares: 'shares' as RefTypeEnum,
        SovereignityBill: 'sovereignity_bill' as RefTypeEnum,
        StorePurchase: 'store_purchase' as RefTypeEnum,
        StorePurchaseRefund: 'store_purchase_refund' as RefTypeEnum,
        TransactionTax: 'transaction_tax' as RefTypeEnum,
        UpkeepAdjustmentFee: 'upkeep_adjustment_fee' as RefTypeEnum,
        WarAllyContract: 'war_ally_contract' as RefTypeEnum,
        WarFee: 'war_fee' as RefTypeEnum,
        WarFeeSurrender: 'war_fee_surrender' as RefTypeEnum
    };
}
